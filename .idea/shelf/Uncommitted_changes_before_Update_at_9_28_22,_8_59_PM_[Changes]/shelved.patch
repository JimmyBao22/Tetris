Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"f5b0ef67-77df-41d6-b519-5585acf9fcf7\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/assignment/TetrisBoard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/assignment/TetrisBoard.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/assignment/TetrisPiece.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/assignment/TetrisPiece.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2FMojIVwW6WwqHWRhC3zsoAwoCM\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"last_opened_file_path\": \"/Users/jimmybao/CS/Java/CS314H/prog4\",\n    \"project.structure.last.edited\": \"SDKs\",\n    \"project.structure.proportion\": \"0.0\",\n    \"project.structure.side.proportion\": \"0.2\",\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\"\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"prog4\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"prog4\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f5b0ef67-77df-41d6-b519-5585acf9fcf7\" name=\"Changes\" comment=\"\" />\n      <created>1664311448027</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1664311448027</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Finished Tetris Piece class\">\n      <created>1664335936830</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664335936830</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Finished Tetris Piece class\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Finished Tetris Piece class\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 972d6117b461e887ce9cd372749678039b2a9d21)
+++ b/.idea/workspace.xml	(date 1664414209591)
@@ -4,7 +4,6 @@
     <list default="true" id="f5b0ef67-77df-41d6-b519-5585acf9fcf7" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/assignment/TetrisBoard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/assignment/TetrisBoard.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/assignment/TetrisPiece.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/assignment/TetrisPiece.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -66,7 +65,14 @@
       <option name="project" value="LOCAL" />
       <updated>1664335936830</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Implemented parts of TetrisBoard">
+      <created>1664339054399</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1664339054399</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -82,6 +88,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Finished Tetris Piece class" />
-    <option name="LAST_COMMIT_MESSAGE" value="Finished Tetris Piece class" />
+    <MESSAGE value="Implemented parts of TetrisBoard" />
+    <option name="LAST_COMMIT_MESSAGE" value="Implemented parts of TetrisBoard" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/assignment/TetrisBoard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package assignment;\n\nimport java.awt.*;\n\n/**\n * Represents a Tetris board -- essentially a 2D grid of piece types (or nulls). Supports\n * tetris pieces and row clearing.  Does not do any drawing or have any idea of\n * pixels. Instead, just represents the abstract 2D board.\n */\npublic final class TetrisBoard implements Board {\n\n    // JTetris will use this constructor\n\n    private int width, height, maxHeight, rowsCleared;\n    private boolean[][] board;\n    private int[] blocksFilledPerRow, blocksFilledPerColumn;\n    private Action lastAction;\n    private Result lastResult;\n    private Piece currentPiece;\n    private Point currentPosition;\n\n    public TetrisBoard(int width, int height) {\n        this.width = width;\n        this.height = height;\n        maxHeight = 0;\n        rowsCleared = 0;\n        // board[i][j] is true if it is filled. Otherwise, it is false\n        board = new boolean[height][width];\n        blocksFilledPerRow = new int[height];\n        blocksFilledPerColumn = new int[width];\n    }\n\n    @Override\n    public Result move(Action act) {\n        // TODO implement and set lastResult to the returned result\n\n        lastAction = act;\n        return Result.NO_PIECE;\n    }\n\n    @Override\n    public Board testMove(Action act) { return null; }\n\n    @Override\n    public Piece getCurrentPiece() { return this.currentPiece; }\n\n    @Override\n    public Point getCurrentPiecePosition() {\n        return this.currentPosition;\n    }\n\n    @Override\n    public void nextPiece(Piece p, Point spawnPosition) {\n        Point[] body = p.getBody();\n        for (int i = 0; i < body.length; i++) {\n            int currentPointX = (int)(spawnPosition.getX() + body[i].getX());\n            int currentPointY = (int)(spawnPosition.getY() + body[i].getY());\n\n            // point is out of bounds\n            if (currentPointX >= width || currentPointX < 0 || currentPointY >= height || currentPointY < 0) {\n                throw new IllegalArgumentException();\n            }\n\n            // point is already occupied\n            if (board[currentPointX][currentPointY]) {\n                throw new IllegalArgumentException();\n            }\n        }\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        // Ignore objects which aren't also tetris boards.\n        if(!(other instanceof TetrisBoard)) return false;\n        TetrisBoard otherBoard = (TetrisBoard) other;\n\n        // TODO make this faster?\n        for (int i = 0; i < height; i++) {\n            for (int j = 0; j < width; j++) {\n                if (this.board[i][j] != otherBoard.board[i][j]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    @Override\n    public Result getLastResult() { return this.lastResult; }\n\n    @Override\n    public Action getLastAction() { return this.lastAction; }\n\n    @Override\n    public int getRowsCleared() { return this.rowsCleared; }\n\n    @Override\n    public int getWidth() { return this.width; }\n\n    @Override\n    public int getHeight() { return this.height; }\n\n    @Override\n    public int getMaxHeight() { return this.maxHeight; }\n\n    @Override\n    public int dropHeight(Piece piece, int x) {\n        // TODO try to increase speed\n        int[] skirt = piece.getSkirt();\n        // TODO asked about x on piazza\n        int height = 0;\n        for (int i = 0; i < skirt.length; i++) {\n            if (skirt[i] != Integer.MAX_VALUE) {\n                height = Math.max(getColumnHeight(x + i) + skirt[i], height);\n            }\n        }\n        return height;\n    }\n\n    @Override\n    public int getColumnHeight(int x) {\n        return this.blocksFilledPerColumn[x];\n    }\n\n    @Override\n    public int getRowWidth(int y) {\n        return this.blocksFilledPerRow[y];\n    }\n\n    @Override\n    public Piece.PieceType getGrid(int x, int y) { return null; }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/assignment/TetrisBoard.java b/src/main/java/assignment/TetrisBoard.java
--- a/src/main/java/assignment/TetrisBoard.java	(revision 972d6117b461e887ce9cd372749678039b2a9d21)
+++ b/src/main/java/assignment/TetrisBoard.java	(date 1664414209187)
@@ -111,7 +111,7 @@
         int height = 0;
         for (int i = 0; i < skirt.length; i++) {
             if (skirt[i] != Integer.MAX_VALUE) {
-                height = Math.max(getColumnHeight(x + i) + skirt[i], height);
+                height = Math.max(getColumnHeight(x + i) - skirt[i], height);
             }
         }
         return height;
