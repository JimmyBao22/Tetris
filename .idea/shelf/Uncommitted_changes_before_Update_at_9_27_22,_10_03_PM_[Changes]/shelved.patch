Index: src/main/java/assignment/TetrisPiece.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package assignment;\n\nimport java.awt.*;\n\n/**\n * An immutable representation of a tetris piece in a particular rotation.\n * \n * All operations on a TetrisPiece should be constant time, except for its\n * initial construction. This means that rotations should also be fast - calling\n * clockwisePiece() and counterclockwisePiece() should be constant time! You may\n * need to do pre-computation in the constructor to make this possible.\n */\npublic final class TetrisPiece implements Piece {\n\n    /**\n     * Construct a tetris piece of the given type. The piece should be in its spawn orientation,\n     * i.e., a rotation index of 0.\n     * \n     * You may freely add additional constructors, but please leave this one - it is used both in\n     * the runner code and testing code.\n     */\n\n    PieceType type;\n    int rotationIndex;\n\n    public TetrisPiece(PieceType type) {\n        this.type = type;\n        rotationIndex = 0;\n    }\n\n    @Override\n    public PieceType getType() {\n        return type;\n    }\n\n    @Override\n    public int getRotationIndex() {\n        return rotationIndex;\n    }\n\n    @Override\n    public Piece clockwisePiece() {\n        // TODO: Implement me.\n        return null;\n    }\n\n    @Override\n    public Piece counterclockwisePiece() {\n        // TODO: Implement me.\n        return null;\n    }\n\n    @Override\n    public int getWidth() {\n        // TODO: Implement me.\n        return -1;\n    }\n\n    @Override\n    public int getHeight() {\n        // TODO: Implement me.\n        return -1;\n    }\n\n    @Override\n    public Point[] getBody() {\n        // TODO: Implement me.\n        return null;\n    }\n\n    @Override\n    public int[] getSkirt() {\n        // TODO: Implement me.\n        return null;\n    }\n\n    @Override\n    public boolean equals(Object other) {\n        // Ignore objects which aren't also tetris pieces.\n        if(!(other instanceof TetrisPiece)) return false;\n        TetrisPiece otherPiece = (TetrisPiece) other;\n\n        // TODO: Implement me.\n        return false;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/assignment/TetrisPiece.java b/src/main/java/assignment/TetrisPiece.java
--- a/src/main/java/assignment/TetrisPiece.java	(revision af8b2cf6e4580869ccceab0f216d7977883fa629)
+++ b/src/main/java/assignment/TetrisPiece.java	(date 1664332143931)
@@ -20,6 +20,7 @@
      * the runner code and testing code.
      */
 
+
     PieceType type;
     int rotationIndex;
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"f5b0ef67-77df-41d6-b519-5585acf9fcf7\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2FMojIVwW6WwqHWRhC3zsoAwoCM\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/jimmybao/CS/Java/CS314H/prog4&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\n      <module name=\"prog4\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <module name=\"prog4\" />\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"f5b0ef67-77df-41d6-b519-5585acf9fcf7\" name=\"Changes\" comment=\"\" />\n      <created>1664311448027</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1664311448027</updated>\n    </task>\n    <servers />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision af8b2cf6e4580869ccceab0f216d7977883fa629)
+++ b/.idea/workspace.xml	(date 1664332729458)
@@ -3,6 +3,7 @@
   <component name="ChangeListManager">
     <list default="true" id="f5b0ef67-77df-41d6-b519-5585acf9fcf7" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/assignment/TetrisPiece.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/assignment/TetrisPiece.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -12,19 +13,25 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
   <component name="ProjectId" id="2FMojIVwW6WwqHWRhC3zsoAwoCM" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/Users/jimmybao/CS/Java/CS314H/prog4&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "last_opened_file_path": "/Users/jimmybao/CS/CS314H/prog4",
+    "project.structure.last.edited": "SDKs",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.2"
   }
-}</component>
+}]]></component>
   <component name="RunManager">
     <configuration default="true" type="JetRunConfigurationType">
       <module name="prog4" />
